pipeline {
  parameters {
    booleanParam(name: 'EXEC_BUILD', defaultValue: true, description: 'Should execute build')
    booleanParam(name: 'EXEC_DEPLOY', defaultValue: true, description: 'Should execute deploy')
    booleanParam(name: 'EXEC_INTEGRATIONTEST', defaultValue: true, description: 'Should execute integration tests')
    booleanParam(name: 'EXEC_UNITTEST', defaultValue: true, description: 'Should execute unit tests')
  }

  agent any
  stages {
    stage('Build') {
      steps {
        script {
          if (params.EXEC_BUILD){
            sh 'cd app; npm i'
            sh 'cd app; npm run build'
          }
        }
      }
    }
    stage('Unit Tests') {
      steps {
        script {
          if (params.EXEC_UNITTEST){
            sh 'npm run test'
          }
        }
      }
    }
    stage('Deploy') {
      steps {
        script {
          if (params.EXEC_DEPLOY){
            sh '''#!/bin/bash
              bucket_found=$(aws s3 ls --region us-east-2 | grep integration.{{.projectName}}.pac.pyramidchallenges.com)
              if [ ${#bucket_found} -eq 0 ]; then
                aws s3 mb s3://integration.{{.projectName}}.pac.pyramidchallenges.com --region us-east-2
                aws s3 website s3://integration.{{.projectName}}.pac.pyramidchallenges.com --index-document index.html --error-document index.html
              fi
              aws s3 sync app/dist s3://integration.{{.projectName}}.pac.pyramidchallenges.com --acl public-read
              DISTRO_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[].{Id: Id, OriginDomainName: Origins.Items[0].DomainName}[?contains(OriginDomainName, 'integration.{{.projectName}}.pac.pyramidchallenges.com.s3.amazonaws.com')] | [0]" | jq '.Id')
              DISTRO_ID=$(sed -e 's/^"//g' -e 's/"$//g' <<< $(echo "$DISTRO_ID"))
              aws cloudfront create-invalidation --distribution-id $DISTRO_ID --paths /bundle.js /styles.css
            '''
          }
        }
      }
    }
    stage('Integration Tests') {
      steps {
        script {
          if (params.EXEC_INTEGRATIONTEST){
            echo "Integration Tests here"
          }
        }
      }
    }
  }
}
