#
server {
listen 80;
listen [::]:80;
server_name SERVERNAME;
return 301 https://$server_name$request_uri;
}
server {
listen 443 ssl default_server;
listen [::]:443 ssl default_server;
server_name SERVERNAME;

resolver RESOLVER_IP;

location / {
    set $s3backend "http://S3_URL";
    proxy_pass $s3backend;
}

location /api/ {
    set $elbBackend "https://LB_URL";
    proxy_pass $elbBackend;
}

location /_plugin/kibana {
    set $kibana "https://KIBANA_URL";
    proxy_pass $kibana;
    proxy_pass_request_headers off;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header content-type 'application/json';
    proxy_set_header kbn-xsrf "u5NfI4BpKsF8qQSFNb47oprLfQojbCRI";
    proxy_cache_bypass $http_upgrade;

    auth_basic "Administrator's Area";
    auth_basic_user_file /etc/nginx/.htpasswd;

    #proxy_set_header Authorization "";
    #proxy_hide_header Authorization;
}


ssl_certificate /etc/certs/certificate.pem;
ssl_certificate_key /etc/certs/privKey.pem;
ssl_protocols TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384;
ssl_ecdh_curve secp384r1;
ssl_session_cache shared:SSL:20m;
ssl_session_tickets off;
ssl_session_timeout 1h;
add_header Strict-Transport-Security "max-age=63072000; includeSubdomains;";
add_header X-XSS-Protection "1; mode=block";
add_header Expect-CT "max-age=0";

}
#
